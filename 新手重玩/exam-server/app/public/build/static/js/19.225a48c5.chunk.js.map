{"version":3,"sources":["components/user/addUser.jsx","components/user/updateUser.jsx","components/user/addIdentity.jsx","components/user/addApi.jsx","components/user/view.jsx","components/user/identityApi.jsx","components/user/identityView.jsx","containers/main/user/addUser.jsx"],"names":["Option","AddUsers","create","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","addPassWord","jwt","encode","console","log","addUser","then","res","code","message","success","resetFields","catch","error","getFieldDecorator","this","onSubmit","Item","className","rules","required","placeholder","identityId","map","item","key","id","value","type_id","identity","type","htmlType","style","marginLeft","onClick","Component","UpdateUser","state","userName","a","updateUser","data","msg","setState","AddIdentity","addIdentity","AddApi","addApi","View","viewAuthority","view_authority_id","view_id","view_authority_text","IdentityApi","apiAuthority","identity_id","identity_text","api_authority_id","api_authority_text","IdentityView","AddUser","size","handleSizeChange","target","Group","onChange","Button","ghost","index"],"mappings":"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","file":"static/js/19.225a48c5.chunk.js","sourcesContent":["/*\r\n * 添加用户\r\n * @Author: chenqiang\r\n * @Date: 2019-09-08 11:25:22\r\n * @Last Modified by: chenqiang\r\n * @Last Modified time: 2019-09-08 11:31:21\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Input, Select, message } from 'antd';\r\nimport { addUser, identityId } from '@/api';\r\nimport jwt from 'jwt-simple';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass AddUsers extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                let secret = 'xxx';\r\n                values.addPassWord = jwt.encode(values.addPassWord, secret);\r\n                console.log(values, 'values');\r\n\r\n                addUser(values)\r\n                    .then(res => {\r\n                        if (res.code === 1) {\r\n                            message.success('添加成功');\r\n                            //添加成功后顺便清除\r\n                            this.props.form.resetFields();\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        message.error('此用户已存在');\r\n                    });\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('addUserName', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!'\r\n                            }\r\n                        ]\r\n                    })(<Input placeholder='请输入用户名' />)}\r\n                </Form.Item>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('addPassWord', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!'\r\n                            }\r\n                        ]\r\n                    })(<Input placeholder='请输入密码' />)}\r\n                </Form.Item>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('identityId', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请选择身份!'\r\n                            }\r\n                        ]\r\n                    })(\r\n                        <Select placeholder='请选择身份'>\r\n                            {this.props.identityId\r\n                                ? this.props.identityId.map(item => (\r\n                                      <Option\r\n                                          key={item.id}\r\n                                          value={item.type_id}>\r\n                                          {item.identity}\r\n                                      </Option>\r\n                                  ))\r\n                                : null}\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        确定\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 8 }}\r\n                        onClick={() => {\r\n                            this.props.form.resetFields();\r\n                        }}>\r\n                        重置\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nexport default AddUsers;\r\n","/*\r\n * 更新用户\r\n * @Author: chenqiang\r\n * @Date: 2019-09-08 11:34:00\r\n * @Last Modified by: chenqiang\r\n * @Last Modified time: 2019-09-08 12:10:26\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Input, Select, message } from 'antd';\r\nimport { userName, updateUser } from '@/api';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass UpdateUser extends Component {\r\n    state = {\r\n        userName: []\r\n    };\r\n    componentDidMount() {\r\n        userName().then(res => {\r\n            this.setState({\r\n                userName: res\r\n            });\r\n        });\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll(async (err, values) => {\r\n            if (!err) {\r\n                let data = await updateUser(values);\r\n                if (data.code) {\r\n                    message.success(data.msg);\r\n                    this.props.form.resetFields();\r\n                } else {\r\n                    message.error(data.msg);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const { userName } = this.state;\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('addUserName', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your username!'\r\n                            }\r\n                        ]\r\n                    })(<Input placeholder='请输入用户名' />)}\r\n                </Form.Item>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('identityId', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请选择身份id'\r\n                            }\r\n                        ]\r\n                    })(\r\n                        <Select placeholder='请选择身份id'>\r\n                            {this.props.identityId\r\n                                ? this.props.identityId.map(item => (\r\n                                      <Option\r\n                                          key={item.id}\r\n                                          value={item.type_id}>\r\n                                          {item.identity}\r\n                                      </Option>\r\n                                  ))\r\n                                : null}\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        确定\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 8 }}\r\n                        onClick={() => {\r\n                            this.props.form.resetFields();\r\n                        }}>\r\n                        重置\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nexport default UpdateUser;\r\n","/*\r\n * 添加身份\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:48:47\r\n * @Last Modified by: chenqiang\r\n * @Last Modified time: 2019-09-08 12:13:09\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Input, message } from 'antd';\r\nimport { addIdentity } from '@/api';\r\n@Form.create()\r\nclass AddIdentity extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                addIdentity(values)\r\n                    .then(res => {\r\n                        if (res.code === 1) {\r\n                            message.success('身份添加成功');\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        message.error('此身份已存在');\r\n                    });\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('identityName', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your identityName!'\r\n                            }\r\n                        ]\r\n                    })(<Input placeholder='请输入身份名称' />)}\r\n                </Form.Item>\r\n                <Form.Item className='typeId'>\r\n                    {getFieldDecorator('typeId', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your typeId!'\r\n                            }\r\n                        ]\r\n                    })(<Input placeholder='请输入身份type值' />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        确定\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 8 }}\r\n                        onClick={() => {\r\n                            this.props.form.resetFields();\r\n                        }}>\r\n                        重置\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nexport default AddIdentity;\r\n","/*\r\n * 添加api接口权限\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:48:31\r\n * @Last Modified by: GF\r\n * @Last Modified time: 2019-09-07 10:53:22\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Input, message } from 'antd';\r\nimport { addApi } from '@/api'\r\n\r\n@Form.create()\r\nclass AddApi extends Component {\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\taddApi(values).then(res => {\r\n\t\t\t\t\tif (res.code === 1) {\r\n\t\t\t\t\t\tmessage.success('添加成功');\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(err => {\r\n\t\t\t\t\tmessage.success('添加失败!');\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={ this.handleSubmit }>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{ getFieldDecorator('apiName', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请输入api接口权限名称!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入api接口权限名称' />) }\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{ getFieldDecorator('apiUrl', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请输入api接口权限url!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入api接口权限url' />) }\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{ getFieldDecorator('apiMethod', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请输入api接口权限方法!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入api接口权限方法' />) }\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={ { marginLeft: 8 } }\r\n\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t} }>\r\n\t\t\t\t\t\t重置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default AddApi;\r\n","/*\r\n * 添加视图接口权限\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:51:05\r\n * @Last Modified by: GF\r\n * @Last Modified time: 2019-09-07 17:36:21\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass View extends Component {\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={ this.handleSubmit }>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{ getFieldDecorator('view', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请选择已有视图!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select placeholder='请选择已有视图'>\r\n\t\t\t\t\t\t\t{ this.props.viewAuthority\r\n\t\t\t\t\t\t\t\t? this.props.viewAuthority.map(item => (\r\n\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\tkey={ item.view_authority_id }\r\n\t\t\t\t\t\t\t\t\t\tvalue={ item.view_id }>\r\n\t\t\t\t\t\t\t\t\t\t{ item.view_authority_text }\r\n\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t: null }\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t) }\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={ { marginLeft: 8 } }\r\n\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t} }>\r\n\t\t\t\t\t\t重置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default View;\r\n","/*\r\n * 给身份设置api接口权限\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:50:29\r\n * @Last Modified by: chenqiang\r\n * @Last Modified time: 2019-09-08 11:21:29\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Select } from 'antd';\r\nimport { apiAuthority } from '@/api/index';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass IdentityApi extends Component {\r\n    state = {\r\n        apiAuthority: []\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log(values);\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { identityId } = this.props;\r\n        const { apiAuthority } = this.state;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('identityId', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请选择身份id!'\r\n                            }\r\n                        ]\r\n                    })(\r\n                        <Select placeholder='请选择身份id'>\r\n                            {identityId\r\n                                ? identityId.map(item => (\r\n                                      <Option\r\n                                          key={item.key}\r\n                                          value={item.identity_id}>\r\n                                          {item.identity_text}\r\n                                      </Option>\r\n                                  ))\r\n                                : null}\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('apiId', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请选择api接口权限id!'\r\n                            }\r\n                        ]\r\n                    })(\r\n                        <Select placeholder='请选择api接口权限id'>\r\n                            {apiAuthority\r\n                                ? apiAuthority.map(item => (\r\n                                      <Option\r\n                                          key={item.api_authority_id}\r\n                                          value={item.api_authority_id}>\r\n                                          {item.api_authority_text}\r\n                                      </Option>\r\n                                  ))\r\n                                : null}\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        确定\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 8 }}\r\n                        onClick={() => {\r\n                            this.props.form.resetFields();\r\n                        }}>\r\n                        重置\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        // apiAuthority().then(res => {\r\n        //     this.setState({\r\n        //         apiAuthority: res.map(item => {\r\n        //             return {\r\n        //                 ...item,\r\n        //                 key: item.api_authority_id\r\n        //             };\r\n        //         })\r\n        //     });\r\n        // });\r\n    }\r\n}\r\nexport default IdentityApi;\r\n","/*\r\n * 给身份设置视图权限\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:50:43\r\n\r\n * @Last Modified by: chenqiang\r\n * @Last Modified time: 2019-09-07 17:55:32\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass IdentityView extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { identityId, viewAuthority } = this.props;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('identityId', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请选择身份id!'\r\n                            }\r\n                        ]\r\n                    })(\r\n                        <Select placeholder='请选择身份id'>\r\n                            {identityId\r\n                                ? identityId.map(item => (\r\n                                      <Option\r\n                                          key={item.key}\r\n                                          value={item.identity_id}>\r\n                                          {item.identity_text}\r\n                                      </Option>\r\n                                  ))\r\n                                : null}\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item className='addUserItem'>\r\n                    {getFieldDecorator('viewId', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请选择视图权限id!'\r\n                            }\r\n                        ]\r\n                    })(\r\n                        <Select placeholder='请选择视图权限id'>\r\n                            {viewAuthority\r\n                                ? viewAuthority.map(item => (\r\n                                      <Option\r\n                                          key={item.view_authority_id}\r\n                                          value={item.view_id}>\r\n                                          {item.view_authority_text}\r\n                                      </Option>\r\n                                  ))\r\n                                : null}\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type='primary' htmlType='submit'>\r\n                        确定\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 8 }}\r\n                        onClick={() => {\r\n                            this.props.form.resetFields();\r\n                        }}>\r\n                        重置\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nexport default IdentityView;\r\n","/*\r\n * @Author: chenqiang\r\n * @Date: 2019-09-08 11:17:15\r\n * @Last Modified by: GF\r\n * @Last Modified time: 2019-09-08 19:16:53\r\n>>>>>>> f1ed840c803db19c3a67bba04f49379a5d734317\r\n */\r\nimport React, { Component } from 'react';\r\nimport '@/common/css/userCss/addUser.css';\r\nimport { Button, Radio, Form } from 'antd';\r\nimport AddUsers from '@/components/user/addUser';\r\nimport UpdateUser from '@/components/user/updateUser';\r\nimport AddIdentity from '@/components/user/addIdentity';\r\nimport AddApi from '@/components/user/addApi';\r\nimport View from '@/components/user/view';\r\nimport IdentityApi from '@/components/user/identityApi';\r\nimport IdentityView from '@/components/user/identityView';\r\nimport { identityId, viewAuthority } from '@/api';\r\nimport Item from 'antd/lib/list/Item';\r\n\r\n@Form.create()\r\nclass AddUser extends Component {\r\n    state = {\r\n        size: '添加用户',\r\n        identityId: [],\r\n        viewAuthority: []\r\n    };\r\n    handleSizeChange = e => {\r\n        this.setState({ size: e.target.value });\r\n    };\r\n    render() {\r\n        const { size, identityId, viewAuthority } = this.state;\r\n        return (\r\n            <div className='addUser'>\r\n                <div\r\n                    className='\r\n                                addUser_wrapper \r\n                                addUser_wrapper_left \r\n                                addUser_wrapper_top \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n                    <div className='addUserItem'>\r\n                        <Radio.Group\r\n                            value={size}\r\n                            onChange={this.handleSizeChange}>\r\n                            <Radio.Button value='添加用户'>\r\n                                添加用户\r\n                            </Radio.Button>\r\n                            <Radio.Button value='更新用户'>\r\n                                更新用户\r\n                            </Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    {size === '添加用户' ? (\r\n                        <AddUsers identityId={identityId} />\r\n                    ) : (\r\n                        <UpdateUser identityId={identityId} />\r\n                    )}\r\n                </div>\r\n                <div\r\n                    className='\r\n                                addUser_wrapper\r\n                                addUser_wrapper_top \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n                    <div className='addUserItem'>\r\n                        <Button type='primary' ghost>\r\n                            添加身份\r\n                        </Button>\r\n                    </div>\r\n                    <AddIdentity />\r\n                </div>\r\n                <div\r\n                    className='\r\n                                addUser_wrapper \r\n                                addUser_wrapper_top \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n                    <div className='addUserItem'>\r\n                        <Button type='primary' ghost>\r\n                            添加api接口权限\r\n                        </Button>\r\n                    </div>\r\n                    <AddApi />\r\n                </div>\r\n                <div\r\n                    className='\r\n                                addUser_wrapper \r\n                                addUser_wrapper_left \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n                    <div className='addUserItem'>\r\n                        <Button type='primary' ghost>\r\n                            添加视图接口权限\r\n                        </Button>\r\n                    </div>\r\n                    <View viewAuthority={viewAuthority} />\r\n                </div>\r\n                <div\r\n                    className='\r\n                                addUser_wrapper \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n                    <div className='addUserItem'>\r\n                        <Button type='primary' ghost>\r\n                            给身份设置api接口权限\r\n                        </Button>\r\n                    </div>\r\n                    <IdentityApi identityId={identityId} />\r\n                </div>\r\n                <div\r\n                    className='\r\n                                addUser_wrapper \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n                    <div className='addUserItem'>\r\n                        <Button type='primary' ghost>\r\n                            给身份设置试图权限\r\n                        </Button>\r\n                    </div>\r\n                    <IdentityView\r\n                        identityId={identityId}\r\n                        viewAuthority={viewAuthority}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        //获取所有的身份ID\r\n        identityId().then(res => {\r\n            this.setState({\r\n                identityId: res.map((item, index) => {\r\n                    return {\r\n                        ...item,\r\n                        key: item.id\r\n                    };\r\n                })\r\n            });\r\n        });\r\n\r\n        // viewAuthority().then(res => {\r\n        //     this.setState({\r\n        //         viewAuthority: res.map((item, index) => {\r\n        //             return {\r\n        //                 ...item,\r\n        //                 key: index\r\n        //             };\r\n        //         })\r\n        //     });\r\n        // });\r\n    }\r\n}\r\nexport default AddUser;\r\n"],"sourceRoot":""}