{"version":3,"sources":["containers/main/read/detailRead.jsx"],"names":["Option","Column","detailRead","create","name","state","bans","data","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","banClass","then","res","setState","result","map","item","index","key","getFieldDecorator","this","className","onSubmit","layout","Item","label","value","placeholder","grade_name","grade_id","type","htmlType","dataSource","rowKey","title","dataIndex","render","text","record","Component"],"mappings":"mSAIQA,E,IAAAA,OACAC,E,IAAAA,OAIFC,EAFL,IAAKC,OAAO,CAAEC,KAAM,c,8MAGjBC,MAAQ,CACJC,KAAM,GACNC,KAAM,I,EAcVC,aAAe,SAAAC,GACXA,EAAEC,iBACF,EAAKC,MAAMC,KAAKC,eAAe,SAACC,EAAKC,GAC5BD,GACDE,QAAQC,IAAI,4BAA6BF,M,mFAhBhC,IAAD,OAChBG,cAAWC,KAAK,SAAAC,GACZJ,QAAQC,IAAIG,GACZ,EAAKC,SAAS,CACVf,KAAMc,EAAIE,OAAOC,IAAI,SAACC,EAAMC,GAExB,OADAD,EAAKE,IAAMD,EACJD,U,+BAeb,IACEG,EAAsBC,KAAKjB,MAAMC,KAAjCe,kBACApB,EAASqB,KAAKvB,MAAdE,KAER,OACI,yBAAKsB,UAAU,OACX,yBAAKA,UAAU,OACX,uBAAMC,SAAUF,KAAKpB,aAAcuB,OAAO,UACtC,sBAAMC,KAAN,CAAWC,MAAM,gBACZN,EAAkB,SAAlBA,CACG,2BACI,kBAAC3B,EAAD,CAAQkC,MAAM,OAAd,UAIZ,sBAAMF,KAAN,CAAWC,MAAM,gBACZN,EAAkB,QAAlBA,CACG,uBAAQQ,YAAY,wCAEZP,KAAKvB,MAAMC,KAAKiB,IAAI,SAACC,EAAMC,GACvB,OAAO,kBAACzB,EAAD,CAAQkC,MAAOV,EAAKY,WAAYV,IAAKF,EAAKa,UAAWb,EAAKY,iBAMrF,uBAAQE,KAAK,UAAUC,SAAS,UAAhC,kBAKR,uBAAOC,WAAYjC,EAAMkC,OAAQ,SAAAjB,GAAI,OAAIA,EAAKa,WAC1C,kBAACpC,EAAD,CAAQyC,MAAM,eAAKC,UAAU,WAAWjB,IAAI,aAC5C,kBAACzB,EAAD,CAAQyC,MAAM,eAAKC,UAAU,eAAejB,IAAI,iBAChD,kBAACzB,EAAD,CAAQyC,MAAM,2BAAOC,UAAU,iBAAiBjB,IAAI,mBACpD,kBAACzB,EAAD,CAAQyC,MAAM,2BAAOC,UAAU,aAAajB,IAAI,eAChD,kBAACzB,EAAD,CAAQyC,MAAM,2BAAOC,UAAU,WAAWjB,IAAI,aAC9C,kBAACzB,EAAD,CAAQyC,MAAM,qBAAMC,UAAU,QAAQjB,IAAI,UAC1C,kBAACzB,EAAD,CACIyC,MAAM,eACNE,OAAQ,SAACC,EAAMC,GAAP,OACJ,8BACI,qD,GApEPC,e,EA6EV7C","file":"static/js/15.72ace63f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"@/common/css/readCss/read.css\"\r\nimport { Form, Button, Select, Table } from 'antd';\r\nimport { banClass } from \"@/api\"\r\nconst { Option } = Select;\r\nconst { Column } = Table;\r\n\r\n@Form.create({ name: 'detailRead' })\r\n\r\nclass detailRead extends Component {\r\n    state = {\r\n        bans: [],\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        banClass().then(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                bans: res.result.map((item, index) => {\r\n                    item.key = index\r\n                    return item\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form\r\n        const { data } = this.state;\r\n\r\n        return (\r\n            <div className=\"rea\">\r\n                <div className=\"btn\">\r\n                    <Form onSubmit={this.handleSubmit} layout=\"inline\">\r\n                        <Form.Item label=\"状态\">\r\n                            {getFieldDecorator('status')(\r\n                                <Select>\r\n                                    <Option value=\"200\">200</Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"班级\">\r\n                            {getFieldDecorator('class')(\r\n                                <Select placeholder=\"请选择班级名\">\r\n                                    {\r\n                                        this.state.bans.map((item, index) => {\r\n                                            return <Option value={item.grade_name} key={item.grade_id}>{item.grade_name}</Option>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            查询\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n                <Table dataSource={data} rowKey={item => item.grade_id}>\r\n                    <Column title=\"班级\" dataIndex=\"grade_id\" key=\"grade_id\" />\r\n                    <Column title=\"姓名\" dataIndex=\"student_name\" key=\"student_name\" />\r\n                    <Column title=\"阅卷状态\" dataIndex=\"marking_status\" key=\"marking_status\" />\r\n                    <Column title=\"开始时间\" dataIndex=\"start_time\" key=\"start_time\" />\r\n                    <Column title=\"结束时间\" dataIndex=\"end_time\" key=\"end_time\" />\r\n                    <Column title=\"成材率\" dataIndex=\"yield\" key=\"yield\" />\r\n                    <Column\r\n                        title=\"操作\"\r\n                        render={(text, record) => (\r\n                            <span>\r\n                                <a>批卷</a>\r\n                            </span>\r\n                        )}\r\n                    />\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default detailRead\r\n"],"sourceRoot":""}