{"version":3,"sources":["containers/main/exam/addExamTest.jsx"],"names":["columns","title","dataIndex","render","text","AddExamTest","props","state","data","selectedRows","api","result","this","setState","msg","map","item","index","key","rowSelection","onChange","selectedRowKeys","getCheckboxProps","record","disabled","name","dataSource","onClick","add","bind","tid","id","match","params","opj","code","success","history","push","error","Component"],"mappings":"yQAKMA,EAAU,CACZ,CACIC,MAAO,MACPC,UAAW,MACXC,OAAQ,SAAAC,GAAI,OAAI,2BAAIA,KAExB,CACIH,MAAO,QACPC,UAAW,UAKbG,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAM,GACNC,aAAc,IAJH,E,+MAQIC,M,OAAfC,E,OAEJC,KAAKC,SAAS,CACVL,KAAMG,EAAOG,IAAIC,IAAI,SAACC,EAAMC,GAExB,OADAD,EAAKE,IAAMD,EACJD,M,mIAIT,IAAD,OACL,OACI,6BACI,wDACA,uBACIG,aAAc,CACVC,SAAU,SAACC,EAAiBZ,GACxB,EAAKI,SAAS,CACVJ,kBAIRa,iBAAkB,SAAAC,GAAM,MAAK,CACzBC,SAA0B,kBAAhBD,EAAOE,KACjBA,KAAMF,EAAOE,QAGrBzB,QAASA,EACT0B,WAAYd,KAAKL,MAAMC,OAE3B,uBAAQmB,QAASf,KAAKgB,IAAIC,KAAKjB,OAA/B,6D,8JAOJJ,EAAOI,KAAKL,MAAME,aAAaM,IAAI,SAAAC,GAAI,OAAIA,EAAKc,MAE9CC,EAAOnB,KAAKN,MAAM0B,MAAMC,OAAxBF,GACFG,EAAM,CACN1B,OACAuB,M,SAEerB,IAAewB,G,QAA9BvB,E,QACOwB,KACP,IAAQC,QAAQzB,EAAOG,IAAK,EAAG,WAE3B,EAAKR,MAAM+B,QAAQC,KAAK,yBAG5B,IAAQC,MAAM5B,EAAOG,IAAK,G,yGA3DZ0B,aAgEXnC","file":"static/js/23.3a8dac79.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Button, message } from 'antd';\r\n\r\nimport * as api from '@/api/index';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'tid',\r\n        dataIndex: 'tid',\r\n        render: text => <a>{text}</a>\r\n    },\r\n    {\r\n        title: 'title',\r\n        dataIndex: 'title'\r\n    }\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nclass AddExamTest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            selectedRows: []\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let result = await api.getTestList();\r\n        //console.log(result)\r\n        this.setState({\r\n            data: result.msg.map((item, index) => {\r\n                item.key = index;\r\n                return item;\r\n            })\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>添加试题</h1>\r\n                <Table\r\n                    rowSelection={{\r\n                        onChange: (selectedRowKeys, selectedRows) => {\r\n                            this.setState({\r\n                                selectedRows\r\n                            });\r\n                            //console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n                        },\r\n                        getCheckboxProps: record => ({\r\n                            disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n                            name: record.name\r\n                        })\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={this.state.data}\r\n                />\r\n                <Button onClick={this.add.bind(this)}>\r\n                    点击添加选中的题目\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n    async add() {\r\n        let data = this.state.selectedRows.map(item => item.tid);\r\n        //发送请求将这个题存到对应试卷列表中\r\n        let { id } = this.props.match.params;\r\n        let opj = {\r\n            data,\r\n            id\r\n        };\r\n        let result = await api.updateExam(opj);\r\n        if (result.code) {\r\n            message.success(result.msg, 1, () => {\r\n                //再次跳回试卷列表页面\r\n                this.props.history.push('/main/exam/examList');\r\n            });\r\n        } else {\r\n            message.error(result.msg, 1);\r\n        }\r\n    }\r\n}\r\n\r\nexport default AddExamTest;\r\n"],"sourceRoot":""}