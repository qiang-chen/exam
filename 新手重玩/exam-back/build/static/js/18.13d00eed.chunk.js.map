{"version":3,"sources":["containers/main/test/addTest.jsx"],"names":["Option","AddTest","props","state","editorContent","editorContent2","one","two","title","titleDdata","timeTest","classData","typeTime","classType","titleType","value","this","setState","id","match","params","api","exit","console","log","msg","content","answer","timeResult","result","elemMenu","refs","editorElemMenu","elemBody","editorElemBody","elemMenu2","editorElemMenu2","elemBody2","editorElemBody2","editor","E","editor2","customConfig","onchange","html","txt","menus","uploadImgShowBase64","create","data","timeId","classId","titleId","uid","code","success","error","editorState","editorStateTow","className","maxLength","placeholder","onChange","e","target","max","len","ref","style","backgroundColor","border","padding","overflowY","height","borderTop","defaultValue","width","handleChangeTest","bind","map","item","key","timeType","handleChangeText","handleChangeTitle","type","icon","onClick","submit","React","Component","connect","authorization"],"mappings":"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","file":"static/js/18.13d00eed.chunk.js","sourcesContent":["/*\r\n * @Author: chenqiang\r\n * @Date: 2019-09-03 23:19:37\r\n * @Last Modified by: chenqiang\r\n * @Last Modified time: 2019-09-09 20:25:04\r\n */\r\nimport React from 'react';\r\nimport { Card, Button, Modal, Input } from 'antd';\r\nimport '@/common/css/testCss/addTest.css';\r\nimport * as api from '@/api/index';\r\nimport { Select, message } from 'antd';\r\nimport E from 'wangeditor';\r\n//从仓库取出身份id\r\nimport { connect } from 'dva';\r\n\r\nconst { Option } = Select;\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        uid: state.authorization.uid\r\n    };\r\n};\r\n//import { inject, observer } from 'mobx-react'\r\n//import { withRouter } from 'react-router-dom'\r\n\r\n//@withRouter @inject('appStore') @observer\r\nclass AddTest extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editorContent: '', //第一个文本框的内容\r\n            editorContent2: '',\r\n            one: '',\r\n            two: '',\r\n            title: '',\r\n            titleDdata: [], //存储代码类型\r\n            timeTest: [], //时间\r\n            classData: [], //班级储存地方\r\n            typeTime: 'T1', //考试时间字段\r\n            classType: 'C1', //班级类型\r\n            titleType: 'title1' //题目类型\r\n        };\r\n    }\r\n    //三个下拉菜单的值\r\n    handleChangeTest(value) {\r\n        //console.log(`selected ${value}`);\r\n        this.setState({\r\n            typeTime: value\r\n        });\r\n    }\r\n    handleChangeText(value) {\r\n        //console.log(`课程类型 ${value}`);\r\n        this.setState({\r\n            classType: value\r\n        });\r\n    }\r\n    handleChangeTitle(value) {\r\n        //console.log(`题目类型 ${value}`);\r\n        this.setState({\r\n            titleType: value\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //判断下这个是添加试题页面还是编辑试题页面\r\n        let { id } = this.props.match.params;\r\n        if (id !== 'null') {\r\n            //根据这个id去找对应的试卷去\r\n            let exit = await api.exitTest(id);\r\n            console.log(exit);\r\n            this.setState({\r\n                title: exit.msg.title,\r\n                one: exit.msg.content,\r\n                two: exit.msg.answer\r\n            });\r\n        }\r\n        let titleDdata = await api.getTitleType();\r\n        this.setState({\r\n            titleDdata: titleDdata.msg\r\n        });\r\n\r\n        // //获取考试时间\r\n        let timeResult = await api.getTestType();\r\n        //console.log(timeResult);\r\n        this.setState({\r\n            timeTest: timeResult.msg\r\n        });\r\n\r\n        // //发起网络请求 获取课程数据\r\n        let result = await api.getClassType();\r\n        //console.log(result);\r\n        this.setState({\r\n            classData: result.msg\r\n        });\r\n\r\n        //富文本\r\n        const elemMenu = this.refs.editorElemMenu;\r\n        const elemBody = this.refs.editorElemBody;\r\n\r\n        const elemMenu2 = this.refs.editorElemMenu2;\r\n        const elemBody2 = this.refs.editorElemBody2;\r\n\r\n        const editor = new E(elemMenu, elemBody);\r\n        const editor2 = new E(elemMenu2, elemBody2);\r\n        // 使用 onchange 函数监听内容的变化，并实时更新到 state 中\r\n        editor.customConfig.onchange = html => {\r\n            console.log(editor.txt.html());\r\n            this.setState({\r\n                // editorContent: editor.txt.text()\r\n                editorContent: editor.txt.html()\r\n            });\r\n        };\r\n\r\n        editor2.customConfig.onchange = html => {\r\n            console.log(editor2.txt.html());\r\n            this.setState({\r\n                // editorContent: editor.txt.text()\r\n                editorContent2: editor2.txt.html()\r\n            });\r\n        };\r\n\r\n        editor.customConfig.menus = [\r\n            'head', // 标题\r\n            'bold', // 粗体\r\n            'fontSize', // 字号\r\n            'fontName', // 字体\r\n            'italic', // 斜体\r\n            'underline', // 下划线\r\n            'strikeThrough', // 删除线\r\n            'foreColor', // 文字颜色\r\n            'backColor', // 背景颜色\r\n            'link', // 插入链接\r\n            'list', // 列表\r\n            'justify', // 对齐方式\r\n            'quote', // 引用\r\n            'emoticon', // 表情\r\n            'image', // 插入图片\r\n            'table', // 表格\r\n            'video', // 插入视频\r\n            'code', // 插入代码\r\n            'undo', // 撤销\r\n            'redo' // 重复\r\n        ];\r\n        editor2.customConfig.menus = [\r\n            'head', // 标题\r\n            'bold', // 粗体\r\n            'fontSize', // 字号\r\n            'fontName', // 字体\r\n            'italic', // 斜体\r\n            'underline', // 下划线\r\n            'strikeThrough', // 删除线\r\n            'foreColor', // 文字颜色\r\n            'backColor', // 背景颜色\r\n            'link', // 插入链接\r\n            'list', // 列表\r\n            'justify', // 对齐方式\r\n            'quote', // 引用\r\n            'emoticon', // 表情\r\n            'image', // 插入图片\r\n            'table', // 表格\r\n            'video', // 插入视频\r\n            'code', // 插入代码\r\n            'undo', // 撤销\r\n            'redo' // 重复\r\n        ];\r\n        editor.customConfig.uploadImgShowBase64 = true;\r\n        editor.create();\r\n        editor2.customConfig.uploadImgShowBase64 = true;\r\n        editor2.create();\r\n    }\r\n\r\n    //点击确定按钮进行的操作\r\n    async submit() {\r\n        //console.log(this.state.editorContent.blocks[0],\"第一个文本域\");\r\n        // console.log(this.state.editorContentTow, \"第二个文本域\");\r\n        // console.log(this.state.title, \"标题\");\r\n        // console.log(this.state.typeTime, \"考试时间\")\r\n        // console.log(this.state.classType, \"课程类型\")\r\n        // console.log(this.state.titleType, \"题目类型\")\r\n        let data = {\r\n            content: this.state.editorContent,\r\n            answer: this.state.editorContent2,\r\n            title: this.state.title,\r\n            timeId: this.state.typeTime,\r\n            classId: this.state.classType,\r\n            titleId: this.state.titleType,\r\n            uid: this.props.uid\r\n        };\r\n        console.log(data);\r\n        //发送接口\r\n        let result = await api.saveTest(data);\r\n        if (result.code) {\r\n            message.success(result.msg, 1);\r\n        } else {\r\n            message.error(result.msg, 1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { editorState, title, editorStateTow } = this.state;\r\n        return (\r\n            <div className='shop'>\r\n                <h1>题目信息</h1>\r\n                <div className='title'>\r\n                    <h3>题干</h3>\r\n                    <Input\r\n                        value={title}\r\n                        maxLength={20}\r\n                        placeholder='请输入题目标题,不超过20个字'\r\n                        onChange={e => {\r\n                            this.setState({\r\n                                title: e.target.value\r\n                            });\r\n                        }}\r\n                        max={20}\r\n                        len={20}\r\n                    />\r\n                </div>\r\n\r\n                <div className='text-area'>\r\n                    <div\r\n                        ref='editorElemMenu'\r\n                        style={{\r\n                            backgroundColor: '#f1f1f1',\r\n                            border: '1px solid #ccc'\r\n                        }}\r\n                        className='editorElem-menu'\r\n                    ></div>\r\n                    <div\r\n                        style={{\r\n                            padding: '0 10px',\r\n                            overflowY: 'scroll',\r\n                            height: 300,\r\n                            border: '1px solid #ccc',\r\n                            borderTop: 'none'\r\n                        }}\r\n                        ref='editorElemBody'\r\n                        className='editorElem-body'\r\n                    >\r\n                        {this.state.one}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='list'>\r\n                    <div className='item'>\r\n                        <p>请选择考试类型：</p>\r\n                        <Select\r\n                            defaultValue='周考一'\r\n                            style={{ width: 220 }}\r\n                            onChange={this.handleChangeTest.bind(this)}\r\n                        >\r\n                            {this.state.timeTest.map(item => {\r\n                                return (\r\n                                    <Option\r\n                                        value={item.timeId}\r\n                                        key={item.timeId}\r\n                                    >\r\n                                        {item.timeType}\r\n                                    </Option>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n                    <div className='item'>\r\n                        <p>请选择课程类型：</p>\r\n                        <Select\r\n                            defaultValue='JavaScript上'\r\n                            style={{ width: 220 }}\r\n                            onChange={this.handleChangeText.bind(this)}\r\n                        >\r\n                            {this.state.classData.map(item => {\r\n                                return (\r\n                                    <Option\r\n                                        value={item.classId}\r\n                                        key={item.classId}\r\n                                    >\r\n                                        {item.classType}\r\n                                    </Option>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n                    <div className='item'>\r\n                        <p>请选择题目类型</p>\r\n                        <Select\r\n                            defaultValue='解答题'\r\n                            style={{ width: 220 }}\r\n                            onChange={this.handleChangeTitle.bind(this)}\r\n                        >\r\n                            {this.state.titleDdata.map(item => {\r\n                                return (\r\n                                    <Option\r\n                                        value={item.titleId}\r\n                                        key={item.titleId}\r\n                                    >\r\n                                        {item.titleType}\r\n                                    </Option>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='text-area'>\r\n                    <div\r\n                        ref='editorElemMenu2'\r\n                        style={{\r\n                            backgroundColor: '#f1f1f1',\r\n                            border: '1px solid #ccc'\r\n                        }}\r\n                        className='editorElem-menu'\r\n                    ></div>\r\n                    <div\r\n                        style={{\r\n                            padding: '0 10px',\r\n                            overflowY: 'scroll',\r\n                            height: 300,\r\n                            border: '1px solid #ccc',\r\n                            borderTop: 'none'\r\n                        }}\r\n                        ref='editorElemBody2'\r\n                        className='editorElem-body'\r\n                    >\r\n                        {this.state.two}\r\n                    </div>\r\n                </div>\r\n                <div className='submit'>\r\n                    <Button\r\n                        type='primary'\r\n                        icon='plus'\r\n                        onClick={this.submit.bind(this)}\r\n                    >\r\n                        提交\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddTest);\r\n"],"sourceRoot":""}